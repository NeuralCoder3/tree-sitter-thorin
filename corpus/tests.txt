================================================================================
skip
================================================================================
skip
--------------------------------------------------------------------------------

(program
  (stmt
    (skip)))

================================================================================
assignment
================================================================================

x := 3; skip
--------------------------------------------------------------------------------

(program
  (stmt
    (seq
      (stmt
        (asgn
          (id)
          (aexp
            (num))))
      (stmt
        (skip)))))

================================================================================
prec
================================================================================

x := 1 * 2 + 5 - 4

--------------------------------------------------------------------------------

(program
  (stmt
    (asgn
      (id)
      (aexp
        (minus
          (aexp
            (plus
              (aexp
                (times
                  (aexp
                    (num))
                  (aexp
                    (num))))
              (aexp
                (num))))
          (aexp
            (num)))))))

================================================================================
prog
================================================================================

if x = y + 1 + 2 - y * 6 + 3 then x := x * 1; y := 0 else skip end

--------------------------------------------------------------------------------

(program
  (stmt
    (if
      (bexp
        (eqb
          (aexp
            (id))
          (aexp
            (plus
              (aexp
                (minus
                  (aexp
                    (plus
                      (aexp
                        (plus
                          (aexp
                            (id))
                          (aexp
                            (num))))
                      (aexp
                        (num))))
                  (aexp
                    (times
                      (aexp
                        (id))
                      (aexp
                        (num))))))
              (aexp
                (num))))))
      (stmt
        (seq
          (stmt
            (asgn
              (id)
              (aexp
                (times
                  (aexp
                    (id))
                  (aexp
                    (num))))))
          (stmt
            (asgn
              (id)
              (aexp
                (num))))))
      (stmt
        (skip)))))
